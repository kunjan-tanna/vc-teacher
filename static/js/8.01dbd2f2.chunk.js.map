{"version":3,"sources":["demos/chartjs.js","assets/img/bg/background_1920-11.jpg","assets/img/bg/background_1920-18.jpg","assets/img/bg/background_640-1.jpg","assets/img/bg/background_640-3.jpg","assets/img/bg/background_1920-5.jpg","assets/img/bg/background_1920-6.jpg","assets/img/bg/background_1920-7.png","assets/img/bg/background_1920-19.jpg","components/Typography.js","components/Page.js","demos/cardPage.js","../node_modules/reactstrap/es/CardLink.js","pages/CardPage.js","utils/colors.js"],"names":["__webpack_require__","d","__webpack_exports__","getStackLineChart","stackLineChartOptions","chart_js__WEBPACK_IMPORTED_MODULE_0__","chart_js__WEBPACK_IMPORTED_MODULE_0___default","n","utils_colors__WEBPACK_IMPORTED_MODULE_1__","_ref","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","color","alpha","rgbString","datasets","label","borderColor","getColor","backgroundColor","fill","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","module","exports","p","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","Object","K_VC_proj_vc_frontend_vc_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","K_VC_proj_vc_frontend_vc_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","K_VC_proj_vc_frontend_vc_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","overlayCards","imgUrl","bg5Image","bg6Image","bg7Image","bg19Image","bgCards","gradientCards","propTypes","utils","innerRef","prop_types_default","oneOfType","object","func","string","cssModule","CardLink_CardLink","props","attributes","objectWithoutPropertiesLoose","classnames_default","react_default","esm_extends","ref","es_CardLink","CardPage","Row","Col","md","sm","xs","es_Card","CardImg","src","bg1Image","style","width","height","CardBody","CardTitle","CardText","bg3Image","top","bg11Image","bg18Image","ListGroup","flush","ListGroupItem","href","inverse","concat","Button","outline","alt","CardImgOverlay","Card","avatar","user1Image","subtitle","text","es","options","position","lg","_ref3","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue"],"mappings":"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","file":"static/js/8.01dbd2f2.chunk.js","sourcesContent":["import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nexport const getStackLineChart = ({ labels, data }) => canvas => {\n  const ctx = canvas.getContext('2d');\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n  gradient.addColorStop(\n    0,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(1)\n      .rgbString()\n  );\n  gradient.addColorStop(\n    1,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(0.2)\n      .rgbString()\n  );\n\n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        label: 'My First dataset',\n        borderColor: getColor('primary'),\n        backgroundColor: gradient,\n        fill: 'origin',\n      },\n    ],\n  };\n};\n\nexport const stackLineChartOptions = {\n  tooltips: {\n    intersect: false,\n  },\n  animation: {\n    duration: 0,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n    yAxes: [{ display: false }],\n  },\n  legend: {\n    display: false,\n  },\n  // elements: {\n  //   line: {\n  //     tension: 0, // disables bezier curves\n  //   },\n  // },\n};\n","module.exports = __webpack_public_path__ + \"static/media/background_1920-11.b7f68e8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-18.acfe7046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-1.1420d15b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-3.55e47e98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-5.1d98ff2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-6.1e0eb550.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-7.abf47fc1.png\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-19.22fc19f2.jpg\";","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nimport bg5Image from 'assets/img/bg/background_1920-5.jpg';\nimport bg6Image from 'assets/img/bg/background_1920-6.jpg';\nimport bg7Image from 'assets/img/bg/background_1920-7.png';\nimport bg19Image from 'assets/img/bg/background_1920-19.jpg';\n\nexport const overlayCards = [\n  { imgUrl: bg5Image },\n  { imgUrl: bg6Image },\n  { imgUrl: bg7Image },\n  { imgUrl: bg19Image },\n];\n\nexport const bgCards = [\n  { color: 'primary' },\n  { color: 'secondary' },\n  { color: 'info' },\n  { color: 'warning' },\n  { color: 'danger' },\n  { color: 'success' },\n];\n\nexport const gradientCards = [\n  { color: 'primary' },\n  { color: 'secondary' },\n  { color: 'info' },\n  { color: 'warning' },\n  { color: 'danger' },\n  { color: 'success' },\n];\n\nexport const chartjs = {\n  line1Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: getColor('secondary'),\n          backgroundColor: getColor('secondary'),\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      animation: {\n        duration: 0,\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n\n  line2Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: '#6a82fb',\n          backgroundColor: '#bcc7ff',\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      animation: {\n        duration: 0,\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n\n  line3Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: '#6a82fb',\n          backgroundColor: '#bcc7ff',\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      // animation: {\n      //   duration: 0,\n      // },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n};\n\nexport const chartJsGradient = {\n  line1Props: {\n    data: canvas => {\n      const ctx = canvas.getContext('2d');\n      let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n      gradient.addColorStop(\n        0,\n        ChartJS.helpers\n          .color('#00c5dc')\n          .alpha(0.7)\n          .rgbString()\n      );\n      gradient.addColorStop(\n        1,\n        ChartJS.helpers\n          .color('#f2feff')\n          .alpha(0)\n          .rgbString()\n      );\n\n      return {\n        labels: [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n        ],\n        datasets: [\n          {\n            label: 'Sales Stats',\n            backgroundColor: gradient, // Put the gradient here as a fill color\n            borderColor: '#0dc8de',\n\n            pointBackgroundColor: ChartJS.helpers\n              .color('#ffffff')\n              .alpha(0)\n              .rgbString(),\n            pointBorderColor: ChartJS.helpers\n              .color('#ffffff')\n              .alpha(0)\n              .rgbString(),\n            pointHoverBackgroundColor: '#fc5c7d',\n            pointHoverBorderColor: ChartJS.helpers\n              .color('#000000')\n              .alpha(0.2)\n              .rgbString(),\n\n            //fill: 'start',\n            data: [\n              20,\n              10,\n              18,\n              15,\n              26,\n              18,\n              15,\n              22,\n              16,\n              12,\n              12,\n              13,\n              10,\n              18,\n              14,\n              24,\n              16,\n              12,\n              19,\n              21,\n              16,\n              14,\n              21,\n              21,\n              13,\n              15,\n              22,\n              24,\n              21,\n              11,\n              14,\n              19,\n              21,\n              17,\n            ],\n          },\n        ],\n      };\n    },\n    type: 'line',\n    options: {\n      title: {\n        display: false,\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n        xPadding: 10,\n        yPadding: 10,\n        caretPadding: 10,\n      },\n      legend: {\n        display: false,\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: 'Month',\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: 'Value',\n            },\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n      elements: {\n        line: {\n          tension: 0.19,\n        },\n        point: {\n          radius: 4,\n          borderWidth: 12,\n        },\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 0,\n          top: 5,\n          bottom: 0,\n        },\n      },\n    },\n  },\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar CardLink = function CardLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-link'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n};\n\nCardLink.propTypes = propTypes;\nCardLink.defaultProps = defaultProps;\nexport default CardLink;","import bg11Image from 'assets/img/bg/background_1920-11.jpg';\nimport bg18Image from 'assets/img/bg/background_1920-18.jpg';\nimport bg1Image from 'assets/img/bg/background_640-1.jpg';\nimport bg3Image from 'assets/img/bg/background_640-3.jpg';\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport { UserCard } from 'components/Card';\nimport Page from 'components/Page';\nimport { bgCards, gradientCards, overlayCards } from 'demos/cardPage';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardImgOverlay,\n  CardLink,\n  CardText,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\n\nconst CardPage = () => {\n  return (\n    <Page title=\"Cards\" breadcrumbs={[{ name: 'cards', active: true }]}>\n      <Row>\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card className=\"flex-row\">\n            <CardImg\n              className=\"card-img-left\"\n              src={bg1Image}\n              style={{ width: 'auto', height: 150 }}\n            />\n            <CardBody>\n              <CardTitle>Horizontal Image Card(Left)</CardTitle>\n              <CardText>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card className=\"flex-row\">\n            <CardBody>\n              <CardTitle>Horizontal Image Card(Right)</CardTitle>\n              <CardText>Some quick example card</CardText>\n            </CardBody>\n            <CardImg\n              className=\"card-img-right\"\n              src={bg3Image}\n              style={{ width: 'auto', height: 150 }}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card>\n            <CardImg top src={bg11Image} />\n            <CardBody>\n              <CardTitle>Card with image</CardTitle>\n              <CardText>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card>\n            <CardImg top src={bg18Image} />\n            <CardBody>\n              <CardTitle>Card with list group</CardTitle>\n              <CardText>\n                This example shows how to use card with list group{' '}\n              </CardText>\n            </CardBody>\n            <ListGroup flush>\n              <ListGroupItem>Cras justo odio</ListGroupItem>\n              <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n              <ListGroupItem>Morbi leo risus</ListGroupItem>\n            </ListGroup>\n            <CardBody>\n              <CardLink tag=\"a\" href=\"#\">\n                Go to details\n              </CardLink>\n              <CardLink tag=\"a\" href=\"#\">\n                More\n              </CardLink>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        {['', 'top', 'left', 'right'].map((color, index) => (\n          <Col key={index} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card\n              inverse\n              className={`border-0 bg-gradient-theme${\n                !!color ? '-' : ''\n              }${color}`}\n              style={{\n                height: 200,\n              }}\n            >\n              <CardBody className=\"d-flex flex-column justify-content-start align-items-start\">\n                <CardTitle>Card title</CardTitle>\n                <CardText>card text</CardText>\n              </CardBody>\n\n              <CardBody className=\"d-flex justify-content-between align-items-center\">\n                <CardText>Karl David</CardText>\n                <Button outline color=\"light\">\n                  Click\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        {overlayCards.map(({ imgUrl }, index) => {\n          return (\n            <Col key={index} md={6} sm={6} xs={12}>\n              <Card inverse className=\"text-center\">\n                <CardImg width=\"100%\" src={imgUrl} alt=\"Card image cap\" />\n                <CardImgOverlay>\n                  <CardTitle>Card Title</CardTitle>\n                  <CardText>inversed card</CardText>\n                  <CardText>\n                    <small className=\"text-muted\">\n                      Last updated 3 mins ago\n                    </small>\n                  </CardText>\n                </CardImgOverlay>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n\n      <Row>\n        <Col md={5}>\n          <UserCard\n            avatar={user1Image}\n            title=\"Chris\"\n            subtitle=\"Project Lead\"\n            text=\"Give me a star!\"\n            style={{\n              height: 300,\n            }}\n          />\n        </Col>\n\n        <Col md={7}>\n          <Card>\n            <Line\n              data={getStackLineChart({\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                ],\n                data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n              })}\n              options={stackLineChartOptions}\n            />\n            <CardBody className=\"text-primary\" style={{ position: 'absolute' }}>\n              <CardTitle>Chart Card</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        {bgCards.map(({ color }, index) => (\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card inverse color={color}>\n              <CardBody>\n                <CardTitle className=\"text-capitalize\">\n                  {color} card title\n                </CardTitle>\n                <CardText>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        {gradientCards.map(({ color }, index) => (\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card\n              inverse\n              className={`bg-gradient-${color} text-center`}\n              style={{ height: 200 }}\n            >\n              <CardBody className=\"d-flex flex-column flex-wrap justify-content-center align-items-center\">\n                <CardTitle>Gradient {color} title</CardTitle>\n                <CardText>card text</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Page>\n  );\n};\n\nexport default CardPage;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n"],"sourceRoot":""}