{"version":3,"sources":["components/PageSpinner.js","redux/reducers/auth/loginReducer.js","redux/reducers/auth/index.js","redux/reducers/global/index.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","PageSpinner","_ref","_ref$color","color","a","createElement","className","initialState","userInfo","accessToken","authReducers","combineReducers","login","state","arguments","length","undefined","action","type","Object","assign","payload","roles","tags","posts","comments","global","persistConfig","key","storage","whitelist","rootReducer","auth","persistReducer","middlewares","thunk","createDebounce","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","apply","persistor","persistStore","LazyApp","lazy","Promise","all","e","then","bind","ReactDOM","render","react_default","es","integration_react","HashRouter","Suspense","fallback","document","getElementById"],"mappings":"yFACA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAwBeI,IArBK,SAAAC,GAA2B,IAAAC,EAAAD,EAAxBE,aAAwB,IAAAD,EAAhB,UAAgBA,EAC7C,OACEL,EAAAO,EAAAC,cAAA,OAAKC,UAAU,mBACbT,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAASI,MAAOA,sLCPhBI,EAAe,CACnBC,SAAU,GACVC,YAAa,ICKAC,EAJMC,YAAgB,CACnCC,MDCmB,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAOC,OAAO,GAAIP,EAAO,CAC9BL,SAAUS,EAAOI,QAAQb,SACzBC,YAAaQ,EAAOI,QAAQZ,cAEhC,IAAK,SACH,OAAOF,EAET,QACE,OAAOM,MEhBPN,EAAe,CACnBe,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,SAAU,IAkBGC,EAfA,WAAkC,IAAjCb,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IAAK,OACH,OAAOC,OAAOC,OAAO,GAAIP,EAAO,CAAES,MAAOL,EAAOI,UAClD,IAAK,MACH,OAAOF,OAAOC,OAAO,GAAIP,EAAO,CAAEU,KAAMN,EAAOI,UACjD,IAAK,OACH,OAAOF,OAAOC,OAAO,GAAIP,EAAO,CAAEW,MAAOP,EAAOI,UAClD,IAAK,WACH,OAAOF,OAAOC,OAAO,GAAIP,EAAO,CAAEY,SAAUR,EAAOI,UACrD,QACE,OAAOR,mBCVPc,EAAgB,CACpBC,IAAK,MACLC,iBACAC,UAAW,CAAC,SAGRC,EAAcpB,YAAgB,CAClCqB,KAAMA,EAENN,WAGaO,cAAeN,EAAeI,GCdvCG,EAAc,CAACC,IAAOC,OAEtBC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YACZX,EACA,GACAM,EAAiBM,IAAeC,WAAf,EAAmBV,KAEhCW,EAAYC,YAAaL,WCLzBM,EAAUC,eAAK,kBAAMC,QAAAC,IAAA,CAAAtD,EAAAuD,EAAA,GAAAvD,EAAAuD,EAAA,KAAAC,KAAAxD,EAAAyD,KAAA,aAE3BC,IAASC,OACPC,EAAApD,EAAAC,cAACoD,EAAA,EAAD,CAAUhB,MAAOA,GACfe,EAAApD,EAAAC,cAACqD,EAAA,EAAD,CAAab,UAAWA,GACtBW,EAAApD,EAAAC,cAACsD,EAAA,EAAD,KACEH,EAAApD,EAAAC,cAACmD,EAAApD,EAAMwD,SAAP,CAAgBC,SAAUL,EAAApD,EAAAC,cAACL,EAAA,EAAD,OACxBwD,EAAApD,EAAAC,cAAC0C,EAAD,UAMRe,SAASC,eAAe","file":"static/js/main.fd38c690.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Spinner } from 'reactstrap';\n\nconst PageSpinner = ({ color = 'primary' }) => {\n  return (\n    <div className=\"cr-page-spinner\">\n      <Spinner color={color} />\n    </div>\n  );\n};\n\nPageSpinner.propTypes = {\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info',\n    'light',\n    'dark',\n  ]),\n};\n\nexport default PageSpinner;\n","const initialState = {\n  userInfo: '',\n  accessToken: '',\n};\n\nexport const login = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_WITH_JWT':\n      return Object.assign({}, state, {\n        userInfo: action.payload.userInfo,\n        accessToken: action.payload.accessToken,\n      });\n    case 'LOGOUT':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\"\nimport { login } from \"./loginReducer\"\n\nconst authReducers = combineReducers({\n  login\n})\n\nexport default authReducers\n","const initialState = {\r\n  roles: [],\r\n  tags: [],\r\n  posts: [],\r\n  comments: [],\r\n};\r\n\r\nconst global = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ROLE':\r\n      return Object.assign({}, state, { roles: action.payload });\r\n    case 'TAG':\r\n      return Object.assign({}, state, { tags: action.payload });\r\n    case 'POST':\r\n      return Object.assign({}, state, { posts: action.payload });\r\n    case 'COMMENTS':\r\n      return Object.assign({}, state, { comments: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default global;\r\n","import { combineReducers } from 'redux';\n\nimport auth from './auth/';\n\nimport global from './global';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'jwt',\n  storage,\n  whitelist: ['auth'],\n};\n\nconst rootReducer = combineReducers({\n  auth: auth,\n\n  global,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware, compose } from \"redux\"\nimport createDebounce from \"redux-debounced\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"../reducers/rootReducer\"\nimport {persistStore} from 'redux-persist'\n\nconst middlewares = [thunk, createDebounce()]\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(...middlewares))\n)\nconst persistor = persistStore(store)\n\nexport { store ,persistor}","import React, { Suspense, lazy } from 'react';\nimport ReactDOM from 'react-dom';\nimport PageSpinner from 'components/PageSpinner';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/storeConfig/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst LazyApp = lazy(() => import('./App'));\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <HashRouter>\n        <React.Suspense fallback={<PageSpinner />}>\n          <LazyApp />\n        </React.Suspense>\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}